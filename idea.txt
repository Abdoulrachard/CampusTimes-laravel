-Avoir acces au dashboard de collaborateur mais sans la posibilité de modifiernou de creer 
-Utiliser les policie pour eviter l'acces manuel des route d'admin
- creer des emplois du temps , utiliser les meme route de visualisation de l'emplois du temps pour optimiser le code 
- Envoie des mail lors de la creation d'un proffesseur ou d'un collaborateur par l'admin 
- envoie de mail a tout les etudiant et proffesseur concerner lors de la creation d'un emplois du temps 
- mse a jour d'un user et changement de profil , mot de passe oublier et autre 
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Str;

class DeniedForStudent
{
    public function handle(Request $request, Closure $next)
    {
        // Vérifier si l'utilisateur est authentifié
        if (Auth::check()) {
            // Vérifier si l'utilisateur a le rôle d'administrateur (role_id === 1)
            if (Auth::user()->role->id === 1) {
                // Vérifier si la route est autorisée pour les administrateurs
                if ($this->isAdminRoute($request)) {
                    return $next($request); // Autoriser l'accès à la route pour les administrateurs
                } else {
                    return abort(403, 'Unauthorized action.'); // Accès non autorisé pour cette route spécifique
                }
            } else {
                return abort(403, 'Unauthorized action.'); // Utilisateur non administrateur
            }
        } else {
            // Si l'utilisateur n'est pas authentifié, vérifier s'il tente d'accéder à une route autorisée
            if ($this->isAllowedRoute($request)) {
                return $next($request); // Autoriser l'accès à la route autorisée (comme auth.login ou auth.logout)
            } else {
                return redirect()->route('auth.login'); // Rediriger vers la page de connexion
            }
        }
    }

    private function isAdminRoute(Request $request)
    {
        return Str::startsWith($request->route()->getName(), 'admin.');
    }

    private function isAllowedRoute(Request $request)
    {
        $allowedRoutes = [
            'auth.login',
            'auth.logout',
            // Ajoutez d'autres noms de route autorisées ici si nécessaire
        ];

        return in_array($request->route()->getName(), $allowedRoutes);
    }
}
